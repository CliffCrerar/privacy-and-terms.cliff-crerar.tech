{"ast":null,"code":"var _jsxFileName = \"/Users/cliff/GIT/privacy-and-terms.cliff-crerar.tech/src/components/Render-Markdown/Render-Markdown.tsx\";\nimport React, { useEffect } from 'react'; // import {MarkItDown} from '../mark-it-down'\n\nimport { render } from \"react-dom\";\nimport { IonIcon, IonItem, IonItemDivider, IonText, IonTitle } from '@ionic/react';\nimport { lockClosedOutline } from 'ionicons/icons';\nimport MarkdownIt from 'markdown-it'; // import error = Simulate.error;\n\nconst markItDown = new MarkdownIt();\nlet fetched = false;\nconsole.log('init', fetched);\nexport default function RenderMarkdown({\n  markdownFile\n}) {\n  let mdContainer;\n  let headingEl;\n  let headingSec;\n  let headingThird;\n  let headingFourth; // const [renderedMd, updatedHttpCall] = useState('');\n\n  const funcs = {\n    renderMarkdownAndStyle_termsofuse: function () {\n      render( /*#__PURE__*/React.createElement(IonItem, {\n        style: {\n          fontSize: '1.5em'\n        },\n        className: \"ion-margin-vertical\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(IonIcon, {\n        slot: \"start\",\n        size: \"large\",\n        icon: lockClosedOutline,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(IonText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }\n      }, headingEl.innerText)), headingEl);\n      headingSec.forEach(el => {\n        console.log(el);\n        render( /*#__PURE__*/React.createElement(IonItem, {\n          style: {\n            fontSize: '1.2em'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 24\n          }\n        }, el.innerText), el);\n      });\n      render( /*#__PURE__*/React.createElement(IonItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(IonTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, headingThird[0].innerText), headingFourth[0].innerText), headingThird[0]);\n      render( /*#__PURE__*/React.createElement(IonItemDivider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, \"}\"), headingFourth[0]);\n    }\n  };\n  useEffect(() => {\n    if (!fetched) {\n      let responseBody = '';\n      fetched = true;\n      mdContainer = document.getElementById('md-container');\n      fetch(`/${markdownFile}.md`).then(response => response.text().then(body => {\n        responseBody = body;\n      })).catch(httpError => console.error(httpError.message)).finally(() => {\n        Promise.resolve(markItDown.render(responseBody)).then(returnVal => {\n          mdContainer.innerHTML = returnVal;\n          headingEl = mdContainer.querySelector('h1');\n          headingSec = mdContainer.querySelectorAll('h2');\n          headingThird = mdContainer.querySelectorAll('h3');\n          headingFourth = mdContainer.querySelectorAll('h4');\n          console.log(mdContainer);\n          console.log(returnVal);\n          headingEl.id = 'heading'; // = returnVal;\n\n          console.log(mdContainer); // updatedHttpCall(returnVal)\n          // Promise.resolve(updatedHttpCall(returnVal)).then(()=>{\n          //     setTimeout(()=>renderMarkdownAndStyle(),1000);\n          // });\n        }).catch(renderError => console.error(renderError.message)).finally(() => {\n          const funcPartial = markdownFile.replace(/-/g, '');\n          console.log(funcPartial); // funcs[`renderMarkdownAndStyle_${funcPartial}`]()\n        });\n      });\n    }\n  });\n\n  function ionItemHeading() {// console.log(el);\n    // const text = el.innerText;\n    // React.createElement()\n    // console.log(text);\n    // render(<div/>, document.getElementById('heading'));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"md-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  });\n}","map":{"version":3,"sources":["/Users/cliff/GIT/privacy-and-terms.cliff-crerar.tech/src/components/Render-Markdown/Render-Markdown.tsx"],"names":["React","useEffect","render","IonIcon","IonItem","IonItemDivider","IonText","IonTitle","lockClosedOutline","MarkdownIt","markItDown","fetched","console","log","RenderMarkdown","markdownFile","mdContainer","headingEl","headingSec","headingThird","headingFourth","funcs","renderMarkdownAndStyle_termsofuse","fontSize","innerText","forEach","el","responseBody","document","getElementById","fetch","then","response","text","body","catch","httpError","error","message","finally","Promise","resolve","returnVal","innerHTML","querySelector","querySelectorAll","id","renderError","funcPartial","replace","ionItemHeading"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\n// import {MarkItDown} from '../mark-it-down'\nimport {render} from \"react-dom\";\nimport {IonIcon, IonItem, IonItemDivider, IonText, IonTitle} from '@ionic/react';\nimport {lockClosedOutline} from 'ionicons/icons'\nimport MarkdownIt from 'markdown-it';\n// import error = Simulate.error;\n\nconst markItDown: MarkdownIt = new MarkdownIt();\n\ntype Props = { markdownFile: string };\n\nlet fetched = false;\nconsole.log('init', fetched)\n\nexport default function RenderMarkdown({markdownFile}: Props) {\n    let mdContainer: HTMLDivElement;\n    let headingEl: HTMLHeadingElement;\n    let headingSec: NodeListOf<HTMLHeadingElement>;\n    let headingThird: NodeListOf<HTMLHeadingElement>;\n    let headingFourth: NodeListOf<HTMLHeadingElement>\n    // const [renderedMd, updatedHttpCall] = useState('');\n\n    const funcs: any = {\n        renderMarkdownAndStyle_termsofuse: function (): void {\n            render(\n                <IonItem style={{fontSize: '1.5em'}} className=\"ion-margin-vertical\">\n                    <IonIcon slot=\"start\" size=\"large\" icon={lockClosedOutline}></IonIcon>\n                    <IonText>{headingEl.innerText}</IonText>\n                </IonItem>, headingEl\n            )\n            headingSec.forEach((el: any) => {\n                console.log(el);\n                render(<IonItem style={{fontSize: '1.2em'}}>{el.innerText}</IonItem>, el);\n            })\n            render(\n                <IonItem>\n                    <IonTitle>\n                        {headingThird[0].innerText}\n                    </IonTitle>\n                    {headingFourth[0].innerText}\n                </IonItem>, headingThird[0])\n            render(\n                <IonItemDivider>}\n                </IonItemDivider>, headingFourth[0]\n            )\n        },\n\n    }\n\n    useEffect(() => {\n        if (!fetched) {\n            let responseBody = '';\n            fetched = true;\n            mdContainer = document.getElementById('md-container') as HTMLDivElement;\n            fetch(`/${markdownFile}.md`).then(response => response.text().then(body => {\n                responseBody = body;\n            })).catch(httpError => console.error(httpError.message))\n                .finally(() => {\n                    Promise.resolve(markItDown.render(responseBody)).then(returnVal => {\n                        mdContainer.innerHTML = returnVal;\n\n                        headingEl = mdContainer.querySelector('h1') as HTMLHeadingElement;\n                        headingSec = mdContainer.querySelectorAll('h2') as NodeListOf<HTMLHeadingElement>;\n                        headingThird = mdContainer.querySelectorAll('h3') as NodeListOf<HTMLHeadingElement>;\n                        headingFourth = mdContainer.querySelectorAll('h4') as NodeListOf<HTMLHeadingElement>;\n                        console.log(mdContainer);\n                        console.log(returnVal);\n                        headingEl.id = 'heading';\n                        // = returnVal;\n                        console.log(mdContainer);\n                        // updatedHttpCall(returnVal)\n\n                        // Promise.resolve(updatedHttpCall(returnVal)).then(()=>{\n                        //     setTimeout(()=>renderMarkdownAndStyle(),1000);\n                        // });\n                    })\n                        .catch(renderError => console.error(renderError.message))\n                        .finally(() => {\n                            const funcPartial = markdownFile.replace(/-/g, '');\n                            console.log(funcPartial);\n                            // funcs[`renderMarkdownAndStyle_${funcPartial}`]()\n                        });\n                })\n        }\n    })\n\n\n\n\n    function ionItemHeading() {\n        // console.log(el);\n        // const text = el.innerText;\n\n        // React.createElement()\n        // console.log(text);\n\n        // render(<div/>, document.getElementById('heading'));\n\n    }\n\n    return (<div id=\"md-container\">\n        {/*{renderedMd}*/}\n    </div>);\n}\n"]},"metadata":{},"sourceType":"module"}