{"ast":null,"code":"var _jsxFileName = \"/Users/cliff/GIT/privacy-and-terms.cliff-crerar.tech/src/components/Render-Markdown/Render-Markdown.tsx\";\nimport React, { useEffect } from 'react'; // import {MarkItDown} from '../mark-it-down'\n\nimport { render } from \"react-dom\";\nimport { IonItem } from '@ionic/react';\nimport MarkdownIt from 'markdown-it';\n// import error = Simulate.error;\nconst markItDown = new MarkdownIt();\nlet fetched = false;\nconsole.log('init', fetched);\nexport default function RenderMarkdown({\n  markdownFile\n}) {\n  let mdContainer; // const [renderedMd, updatedHttpCall] = useState('');\n\n  useEffect(() => {\n    if (!fetched) {\n      let responseBody = '';\n      fetched = true;\n      mdContainer = document.getElementById('md-container');\n      fetch(`/${markdownFile}.md`).then(response => response.text().then(body => {\n        responseBody = body;\n      })).catch(httpError => console.error(httpError.message)).finally(() => {\n        Promise.resolve(markItDown.render(responseBody)).then(returnVal => {\n          mdContainer.innerHTML = returnVal;\n          console.log(mdContainer);\n          console.log(returnVal);\n          mdContainer.querySelector('h1').id = 'heading'; // = returnVal;\n\n          console.log(mdContainer); // updatedHttpCall(returnVal)\n          // Promise.resolve(updatedHttpCall(returnVal)).then(()=>{\n          //     setTimeout(()=>renderMarkdownAndStyle(),1000);\n          // });\n        }).catch(renderError => console.error(renderError.message)).finally(renderMarkdownAndStyle);\n      });\n    }\n  });\n\n  function renderMarkdownAndStyle() {\n    const heading = document.getElementById('heading');\n    console.log(heading);\n    render( /*#__PURE__*/React.createElement(IonItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }\n    }, \"test\"), heading); // const mdHtml = markItDown.render(markdownString);\n    // console.log(mdHtml);\n    // updatedHttpCall()\n    // console.log(mdContainer);\n    // mdContainer.innerHtml = mdHtml;\n  }\n\n  function ionItemHeading() {// console.log(el);\n    // const text = el.innerText;\n    // React.createElement()\n    // console.log(text);\n    // render(<div/>, document.getElementById('heading'));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"md-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  });\n}","map":{"version":3,"sources":["/Users/cliff/GIT/privacy-and-terms.cliff-crerar.tech/src/components/Render-Markdown/Render-Markdown.tsx"],"names":["React","useEffect","render","IonItem","MarkdownIt","markItDown","fetched","console","log","RenderMarkdown","markdownFile","mdContainer","responseBody","document","getElementById","fetch","then","response","text","body","catch","httpError","error","message","finally","Promise","resolve","returnVal","innerHTML","querySelector","id","renderError","renderMarkdownAndStyle","heading","ionItemHeading"],"mappings":";AAAA,OAAOA,KAAP,IAAyBC,SAAzB,QAAmD,OAAnD,C,CACA;;AACA,SAAQC,MAAR,QAAqB,WAArB;AACA,SAAQC,OAAR,QAAsB,cAAtB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA;AAEA,MAAMC,UAAsB,GAAG,IAAID,UAAJ,EAA/B;AAIA,IAAIE,OAAO,GAAG,KAAd;AACAC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,OAApB;AAEA,eAAe,SAASG,cAAT,CAAwB;AAACC,EAAAA;AAAD,CAAxB,EAA+C;AAC1D,MAAIC,WAAJ,CAD0D,CAE1D;;AACAV,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACK,OAAL,EAAc;AACV,UAAIM,YAAY,GAAG,EAAnB;AACAN,MAAAA,OAAO,GAAG,IAAV;AACAK,MAAAA,WAAW,GAAGE,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAd;AACAC,MAAAA,KAAK,CAAE,IAAGL,YAAa,KAAlB,CAAL,CAA6BM,IAA7B,CAAkCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBG,IAAI,IAAI;AACvEP,QAAAA,YAAY,GAAGO,IAAf;AACH,OAF6C,CAA9C,EAEIC,KAFJ,CAEUC,SAAS,IAAId,OAAO,CAACe,KAAR,CAAcD,SAAS,CAACE,OAAxB,CAFvB,EAGKC,OAHL,CAGa,MAAM;AACXC,QAAAA,OAAO,CAACC,OAAR,CAAgBrB,UAAU,CAACH,MAAX,CAAkBU,YAAlB,CAAhB,EAAiDI,IAAjD,CAAsDW,SAAS,IAAI;AAC/DhB,UAAAA,WAAW,CAACiB,SAAZ,GAAwBD,SAAxB;AACApB,UAAAA,OAAO,CAACC,GAAR,CAAYG,WAAZ;AACAJ,UAAAA,OAAO,CAACC,GAAR,CAAYmB,SAAZ;AACAhB,UAAAA,WAAW,CAACkB,aAAZ,CAA0B,IAA1B,EAAgCC,EAAhC,GAAqC,SAArC,CAJ+D,CAK/D;;AACAvB,UAAAA,OAAO,CAACC,GAAR,CAAYG,WAAZ,EAN+D,CAO/D;AAEA;AACA;AACA;AACH,SAZD,EAaKS,KAbL,CAaWW,WAAW,IAAIxB,OAAO,CAACe,KAAR,CAAcS,WAAW,CAACR,OAA1B,CAb1B,EAcKC,OAdL,CAcaQ,sBAdb;AAeH,OAnBL;AAoBH;AACJ,GA1BQ,CAAT;;AA6BA,WAASA,sBAAT,GAAkC;AAC9B,UAAMC,OAAO,GAAGpB,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAhB;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYyB,OAAZ;AACA/B,IAAAA,MAAM,eAAC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAD,EAAyB+B,OAAzB,CAAN,CAH8B,CAI9B;AACA;AACA;AACA;AACA;AAEH;;AAED,WAASC,cAAT,GAA0B,CACtB;AACA;AAEA;AACA;AAEA;AAEH;;AAED,sBAAQ;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR;AAGH","sourcesContent":["import React, {Fragment, useEffect, useState} from 'react';\n// import {MarkItDown} from '../mark-it-down'\nimport {render} from \"react-dom\";\nimport {IonItem} from '@ionic/react';\nimport MarkdownIt from 'markdown-it';\nimport {Simulate} from \"react-dom/test-utils\";\n// import error = Simulate.error;\n\nconst markItDown: MarkdownIt = new MarkdownIt();\n\ntype Props = { markdownFile: string };\n\nlet fetched = false;\nconsole.log('init', fetched)\n\nexport default function RenderMarkdown({markdownFile}: Props) {\n    let mdContainer: any;\n    // const [renderedMd, updatedHttpCall] = useState('');\n    useEffect(() => {\n        if (!fetched) {\n            let responseBody = '';\n            fetched = true;\n            mdContainer = document.getElementById('md-container');\n            fetch(`/${markdownFile}.md`).then(response => response.text().then(body => {\n                responseBody = body;\n            })).catch(httpError => console.error(httpError.message))\n                .finally(() => {\n                    Promise.resolve(markItDown.render(responseBody)).then(returnVal => {\n                        mdContainer.innerHTML = returnVal;\n                        console.log(mdContainer);\n                        console.log(returnVal);\n                        mdContainer.querySelector('h1').id = 'heading';\n                        // = returnVal;\n                        console.log(mdContainer);\n                        // updatedHttpCall(returnVal)\n\n                        // Promise.resolve(updatedHttpCall(returnVal)).then(()=>{\n                        //     setTimeout(()=>renderMarkdownAndStyle(),1000);\n                        // });\n                    })\n                        .catch(renderError => console.error(renderError.message))\n                        .finally(renderMarkdownAndStyle);\n                })\n        }\n    })\n\n\n    function renderMarkdownAndStyle() {\n        const heading = document.getElementById('heading');\n        console.log(heading);\n        render(<IonItem>test</IonItem>,heading)\n        // const mdHtml = markItDown.render(markdownString);\n        // console.log(mdHtml);\n        // updatedHttpCall()\n        // console.log(mdContainer);\n        // mdContainer.innerHtml = mdHtml;\n\n    }\n\n    function ionItemHeading() {\n        // console.log(el);\n        // const text = el.innerText;\n\n        // React.createElement()\n        // console.log(text);\n\n        // render(<div/>, document.getElementById('heading'));\n\n    }\n\n    return (<div id=\"md-container\">\n        {/*{renderedMd}*/}\n    </div>);\n}\n"]},"metadata":{},"sourceType":"module"}