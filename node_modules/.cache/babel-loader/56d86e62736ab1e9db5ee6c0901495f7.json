{"ast":null,"code":"var _jsxFileName = \"/Users/cliff/GIT/privacy-and-terms.cliff-crerar.tech/src/components/Render-Markdown/Render-Markdown.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { MarkItDown } from '../mark-it-down';\nexport default function RenderMarkdown({\n  markdownFile\n}) {\n  console.log(markdownFile);\n  let mdContainer;\n  useEffect(() => {\n    mdContainer = document.getElementById('md-container');\n  });\n  const [renderedMd, updatedHttpCall] = useState('');\n  useEffect(() => {\n    fetch(`/${markdownFile}.md`).then(response => response.text().then(body => {\n      updatedHttpCall(MarkItDown(body));\n      mdContainer.innerHTML = renderedMd; // render(renderedMd, mdContainer);\n\n      const headingElement = mdContainer.querySelectorAll('h1');\n      console.log(headingElement);\n    }));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"md-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  });\n}","map":{"version":3,"sources":["/Users/cliff/GIT/privacy-and-terms.cliff-crerar.tech/src/components/Render-Markdown/Render-Markdown.tsx"],"names":["React","useEffect","useState","MarkItDown","RenderMarkdown","markdownFile","console","log","mdContainer","document","getElementById","renderedMd","updatedHttpCall","fetch","then","response","text","body","innerHTML","headingElement","querySelectorAll"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,UAAR,QAAyB,iBAAzB;AAKA,eAAe,SAASC,cAAT,CAAwB;AAACC,EAAAA;AAAD,CAAxB,EAA+C;AAC1DC,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACA,MAAIG,WAAJ;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAd;AACH,GAFQ,CAAT;AAIA,QAAM,CAACC,UAAD,EAAaC,eAAb,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,KAAK,CAAE,IAAGR,YAAa,KAAlB,CAAL,CAA6BS,IAA7B,CAAkCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBG,IAAI,IAAI;AACvEL,MAAAA,eAAe,CAACT,UAAU,CAACc,IAAD,CAAX,CAAf;AACAT,MAAAA,WAAW,CAACU,SAAZ,GAAwBP,UAAxB,CAFuE,CAGvE;;AACA,YAAMQ,cAAc,GAAGX,WAAW,CAACY,gBAAZ,CAA6B,IAA7B,CAAvB;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAYY,cAAZ;AACH,KAN6C,CAA9C;AAOH,GARQ,CAAT;AAUA,sBAAQ;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR;AACH","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {MarkItDown} from '../mark-it-down'\nimport {render} from \"react-dom\";\n\ntype Props = { markdownFile: string };\n\nexport default function RenderMarkdown({markdownFile}: Props) {\n    console.log(markdownFile);\n    let mdContainer: any;\n\n    useEffect(() => {\n        mdContainer = document.getElementById('md-container');\n    })\n\n    const [renderedMd, updatedHttpCall] = useState('')\n\n    useEffect(() => {\n        fetch(`/${markdownFile}.md`).then(response => response.text().then(body => {\n            updatedHttpCall(MarkItDown(body));\n            mdContainer.innerHTML = renderedMd;\n            // render(renderedMd, mdContainer);\n            const headingElement = mdContainer.querySelectorAll('h1');\n            console.log(headingElement);\n        }))\n    })\n\n    return (<div id=\"md-container\"></div>);\n}\n"]},"metadata":{},"sourceType":"module"}