{"ast":null,"code":"var _jsxFileName = \"/Users/cliff/GIT/privacy-and-terms.cliff-crerar.tech/src/components/Render-Markdown/Render-Markdown.tsx\";\nimport React, { useState } from 'react'; // import {MarkItDown} from '../mark-it-down'\n\nimport MarkdownIt from 'markdown-it';\nconst markItDown = new MarkdownIt();\nlet fetched = false;\nconsole.log('init', fetched);\nexport default function RenderMarkdown({\n  markdownFile\n}) {\n  let mdContainer; // useEffect(() => {\n  //\n  //\n  // })\n\n  const [renderedMd, updatedHttpCall] = useState('');\n\n  if (!fetched) {\n    fetched = true;\n    fetch(`/${markdownFile}.md`).then(response => response.text().then(body => {\n      mdContainer = document.getElementById('md-container');\n      updatedHttpCall(markItDown.render(body));\n      console.log('feetch');\n      renderMarkdownAndStyle(renderedMd);\n    }));\n  }\n\n  function renderMarkdownAndStyle(markdownString) {// console.log(markdownString);\n    // const mdHtml = markItDown.render(markdownString);\n    // console.log(mdHtml);\n    // updatedHttpCall()\n    // console.log(mdContainer);\n    // mdContainer.innerHtml = mdHtml;\n  }\n\n  function ionItemHeading() {// console.log(el);\n    // const text = el.innerText;\n    // React.createElement()\n    // console.log(text);\n    // render(<div/>, document.getElementById('heading'));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"md-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  });\n}","map":{"version":3,"sources":["/Users/cliff/GIT/privacy-and-terms.cliff-crerar.tech/src/components/Render-Markdown/Render-Markdown.tsx"],"names":["React","useState","MarkdownIt","markItDown","fetched","console","log","RenderMarkdown","markdownFile","mdContainer","renderedMd","updatedHttpCall","fetch","then","response","text","body","document","getElementById","render","renderMarkdownAndStyle","markdownString","ionItemHeading"],"mappings":";AAAA,OAAOA,KAAP,IAA0BC,QAA1B,QAAyC,OAAzC,C,CACA;;AAGA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,MAAMC,UAAsB,GAAG,IAAID,UAAJ,EAA/B;AAIA,IAAIE,OAAO,GAAG,KAAd;AACAC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBF,OAAnB;AAEA,eAAe,SAASG,cAAT,CAAwB;AAACC,EAAAA;AAAD,CAAxB,EAA+C;AAC1D,MAAIC,WAAJ,CAD0D,CAG1D;AACA;AACA;AACA;;AACA,QAAM,CAACC,UAAD,EAAaC,eAAb,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;;AACA,MAAI,CAACG,OAAL,EAAc;AACVA,IAAAA,OAAO,GAAG,IAAV;AACAQ,IAAAA,KAAK,CAAE,IAAGJ,YAAa,KAAlB,CAAL,CAA6BK,IAA7B,CAAkCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBG,IAAI,IAAI;AACvEP,MAAAA,WAAW,GAAGQ,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAd;AACAP,MAAAA,eAAe,CAACR,UAAU,CAACgB,MAAX,CAAkBH,IAAlB,CAAD,CAAf;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAc,MAAAA,sBAAsB,CAACV,UAAD,CAAtB;AACH,KAL6C,CAA9C;AAMH;;AAID,WAASU,sBAAT,CAAgCC,cAAhC,EAAwD,CACpD;AACA;AACA;AACA;AACA;AACA;AAEH;;AAED,WAASC,cAAT,GAA0B,CACtB;AACA;AAEA;AACA;AAEA;AAEH;;AAED,sBAAQ;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR;AACH","sourcesContent":["import React, {useEffect, useState} from 'react';\n// import {MarkItDown} from '../mark-it-down'\nimport {render} from \"react-dom\";\nimport {IonItem} from '@ionic/react';\nimport MarkdownIt from 'markdown-it';\n\nconst markItDown: MarkdownIt = new MarkdownIt();\n\ntype Props = { markdownFile: string };\n\nlet fetched = false;\nconsole.log('init',fetched)\n\nexport default function RenderMarkdown({markdownFile}: Props) {\n    let mdContainer: any;\n\n    // useEffect(() => {\n    //\n    //\n    // })\n    const [renderedMd, updatedHttpCall] = useState('');\n    if (!fetched) {\n        fetched = true;\n        fetch(`/${markdownFile}.md`).then(response => response.text().then(body => {\n            mdContainer = document.getElementById('md-container');\n            updatedHttpCall(markItDown.render(body));\n            console.log('feetch');\n            renderMarkdownAndStyle(renderedMd);\n        }))\n    }\n\n\n\n    function renderMarkdownAndStyle(markdownString: string) {\n        // console.log(markdownString);\n        // const mdHtml = markItDown.render(markdownString);\n        // console.log(mdHtml);\n        // updatedHttpCall()\n        // console.log(mdContainer);\n        // mdContainer.innerHtml = mdHtml;\n\n    }\n\n    function ionItemHeading() {\n        // console.log(el);\n        // const text = el.innerText;\n\n        // React.createElement()\n        // console.log(text);\n\n        // render(<div/>, document.getElementById('heading'));\n\n    }\n\n    return (<div id=\"md-container\"></div>);\n}\n"]},"metadata":{},"sourceType":"module"}