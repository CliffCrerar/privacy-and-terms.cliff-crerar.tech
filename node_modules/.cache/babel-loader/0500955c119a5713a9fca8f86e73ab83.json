{"ast":null,"code":"var _jsxFileName = \"/Users/cliff/GIT/privacy-and-terms.cliff-crerar.tech/src/components/Render-Markdown/Render-Markdown.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { MarkItDown } from '../mark-it-down';\nimport { render } from \"react-dom\";\nexport default function RenderMarkdown({\n  markdownFile\n}) {\n  console.log(markdownFile);\n  const [renderedMd, updatedHttpCall] = useState('');\n  useEffect(() => {\n    fetch(`/${markdownFile}.md`).then(response => console.log('mdfile', response.text().then(body => {\n      console.log(body);\n      updatedHttpCall(MarkItDown(body));\n    })));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, render({\n    renderedMd\n  }));\n}","map":{"version":3,"sources":["/Users/cliff/GIT/privacy-and-terms.cliff-crerar.tech/src/components/Render-Markdown/Render-Markdown.tsx"],"names":["React","useEffect","useState","MarkItDown","render","RenderMarkdown","markdownFile","console","log","renderedMd","updatedHttpCall","fetch","then","response","text","body"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,UAAR,QAAyB,iBAAzB;AACA,SAAQC,MAAR,QAAqB,WAArB;AAIA,eAAe,SAASC,cAAT,CAAwB;AAACC,EAAAA;AAAD,CAAxB,EAA+C;AAC1DC,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AAEA,QAAM,CAACG,UAAD,EAAaC,eAAb,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,KAAK,CAAE,IAAGL,YAAa,KAAlB,CAAL,CAA6BM,IAA7B,CAAkCC,QAAQ,IAAIN,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBK,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBG,IAAI,IAAI;AAC7FR,MAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AACAL,MAAAA,eAAe,CAACP,UAAU,CAACY,IAAD,CAAX,CAAf;AACH,KAHmE,CAAtB,CAA9C;AAIH,GALQ,CAAT;AAOA,sBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMX,MAAM,CAAC;AAACK,IAAAA;AAAD,GAAD,CAAZ,CAAR;AACH","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {MarkItDown} from '../mark-it-down'\nimport {render} from \"react-dom\";\n\ntype Props = { markdownFile: string };\n\nexport default function RenderMarkdown({markdownFile}: Props) {\n    console.log(markdownFile);\n\n    const [renderedMd, updatedHttpCall] = useState('')\n\n    useEffect(() => {\n        fetch(`/${markdownFile}.md`).then(response => console.log('mdfile', response.text().then(body => {\n            console.log(body);\n            updatedHttpCall(MarkItDown(body));\n        })))\n    })\n\n    return (<div>{render({renderedMd})}</div>);\n}\n"]},"metadata":{},"sourceType":"module"}