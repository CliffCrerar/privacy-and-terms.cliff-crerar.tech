{"ast":null,"code":"var _jsxFileName = \"/Users/cliff/GIT/privacy-and-terms.cliff-crerar.tech/src/components/Render-Markdown/Render-Markdown.tsx\";\nimport React, { useEffect, useState } from 'react'; // import {MarkItDown} from '../mark-it-down'\n\nimport MarkdownIt from 'markdown-it';\n// import error = Simulate.error;\nconst markItDown = new MarkdownIt();\nlet fetched = false;\nconsole.log('init', fetched);\nexport default function RenderMarkdown({\n  markdownFile\n}) {\n  let mdContainer;\n  const [renderedMd, updatedHttpCall] = useState('');\n  useEffect(() => {\n    if (!fetched) {\n      fetched = true;\n      fetch(`/${markdownFile}.md`).then(response => response.text().then(body => {\n        mdContainer = document.getElementById('md-container');\n        console.log('feetch');\n      })).catch(httpError => console.error(httpError.message)).finally(() => {\n        updatedHttpCall(markItDown.render(body));\n      });\n    }\n  });\n\n  function renderMarkdownAndStyle() {\n    console.log(renderedMd); // console.log(markdownString);\n    // const mdHtml = markItDown.render(markdownString);\n    // console.log(mdHtml);\n    // updatedHttpCall()\n    // console.log(mdContainer);\n    // mdContainer.innerHtml = mdHtml;\n  }\n\n  function ionItemHeading() {// console.log(el);\n    // const text = el.innerText;\n    // React.createElement()\n    // console.log(text);\n    // render(<div/>, document.getElementById('heading'));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"md-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  });\n}","map":{"version":3,"sources":["/Users/cliff/GIT/privacy-and-terms.cliff-crerar.tech/src/components/Render-Markdown/Render-Markdown.tsx"],"names":["React","useEffect","useState","MarkdownIt","markItDown","fetched","console","log","RenderMarkdown","markdownFile","mdContainer","renderedMd","updatedHttpCall","fetch","then","response","text","body","document","getElementById","catch","httpError","error","message","finally","render","renderMarkdownAndStyle","ionItemHeading"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC,C,CACA;;AAGA,OAAOC,UAAP,MAAuB,aAAvB;AAEA;AAEA,MAAMC,UAAsB,GAAG,IAAID,UAAJ,EAA/B;AAIA,IAAIE,OAAO,GAAG,KAAd;AACAC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,OAApB;AAEA,eAAe,SAASG,cAAT,CAAwB;AAACC,EAAAA;AAAD,CAAxB,EAA+C;AAC1D,MAAIC,WAAJ;AACA,QAAM,CAACC,UAAD,EAAaC,eAAb,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACI,OAAL,EAAc;AACVA,MAAAA,OAAO,GAAG,IAAV;AACAQ,MAAAA,KAAK,CAAE,IAAGJ,YAAa,KAAlB,CAAL,CAA6BK,IAA7B,CAAkCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBG,IAAI,IAAI;AACvEP,QAAAA,WAAW,GAAGQ,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAd;AAEAb,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH,OAJ6C,CAA9C,EAIIa,KAJJ,CAIUC,SAAS,IAAEf,OAAO,CAACgB,KAAR,CAAcD,SAAS,CAACE,OAAxB,CAJrB,EAKKC,OALL,CAKa,MAAI;AACTZ,QAAAA,eAAe,CAACR,UAAU,CAACqB,MAAX,CAAkBR,IAAlB,CAAD,CAAf;AACH,OAPL;AAQH;AACJ,GAZQ,CAAT;;AAiBA,WAASS,sBAAT,GAAkC;AAC9BpB,IAAAA,OAAO,CAACC,GAAR,CAAYI,UAAZ,EAD8B,CAE9B;AACA;AACA;AACA;AACA;AACA;AAEH;;AAED,WAASgB,cAAT,GAA0B,CACtB;AACA;AAEA;AACA;AAEA;AAEH;;AAED,sBAAQ;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR;AACH","sourcesContent":["import React, {useEffect, useState} from 'react';\n// import {MarkItDown} from '../mark-it-down'\nimport {render} from \"react-dom\";\nimport {IonItem} from '@ionic/react';\nimport MarkdownIt from 'markdown-it';\nimport {Simulate} from \"react-dom/test-utils\";\n// import error = Simulate.error;\n\nconst markItDown: MarkdownIt = new MarkdownIt();\n\ntype Props = { markdownFile: string };\n\nlet fetched = false;\nconsole.log('init', fetched)\n\nexport default function RenderMarkdown({markdownFile}: Props) {\n    let mdContainer: any;\n    const [renderedMd, updatedHttpCall] = useState('');\n    useEffect(() => {\n        if (!fetched) {\n            fetched = true;\n            fetch(`/${markdownFile}.md`).then(response => response.text().then(body => {\n                mdContainer = document.getElementById('md-container');\n\n                console.log('feetch');\n            })).catch(httpError=>console.error(httpError.message))\n                .finally(()=>{\n                    updatedHttpCall(markItDown.render(body));\n                })\n        }\n    })\n\n\n\n\n    function renderMarkdownAndStyle() {\n        console.log(renderedMd);\n        // console.log(markdownString);\n        // const mdHtml = markItDown.render(markdownString);\n        // console.log(mdHtml);\n        // updatedHttpCall()\n        // console.log(mdContainer);\n        // mdContainer.innerHtml = mdHtml;\n\n    }\n\n    function ionItemHeading() {\n        // console.log(el);\n        // const text = el.innerText;\n\n        // React.createElement()\n        // console.log(text);\n\n        // render(<div/>, document.getElementById('heading'));\n\n    }\n\n    return (<div id=\"md-container\"></div>);\n}\n"]},"metadata":{},"sourceType":"module"}