{"ast":null,"code":"var _jsxFileName = \"/Users/cliff/GIT/privacy-and-terms.cliff-crerar.tech/src/components/Render-Markdown/Render-Markdown.tsx\";\nimport React, { useEffect } from 'react'; // import {MarkItDown} from '../mark-it-down'\n\nimport { render } from \"react-dom\";\nimport { IonIcon, IonItem, IonItemDivider, IonText, IonTitle } from '@ionic/react';\nimport { lockClosedOutline } from 'ionicons/icons';\nimport MarkdownIt from 'markdown-it'; // import error = Simulate.error;\n\nconst markItDown = new MarkdownIt();\nlet fetched = false;\nconsole.log('init', fetched);\nexport default function RenderMarkdown({\n  markdownFile\n}) {\n  let mdContainer;\n  let headingEl;\n  let headingSec;\n  let headingThird;\n  let headingFourth; // const [renderedMd, updatedHttpCall] = useState('');\n\n  useEffect(() => {\n    if (!fetched) {\n      let responseBody = '';\n      fetched = true;\n      mdContainer = document.getElementById('md-container');\n      fetch(`/${markdownFile}.md`).then(response => response.text().then(body => {\n        responseBody = body;\n      })).catch(httpError => console.error(httpError.message)).finally(() => {\n        Promise.resolve(markItDown.render(responseBody)).then(returnVal => {\n          mdContainer.innerHTML = returnVal;\n          headingEl = mdContainer.querySelector('h1');\n          headingSec = mdContainer.querySelectorAll('h2');\n          headingThird = mdContainer.querySelectorAll('h3');\n          headingFourth = mdContainer.querySelectorAll('h4');\n          console.log(mdContainer);\n          console.log(returnVal);\n          headingEl.id = 'heading'; // = returnVal;\n\n          console.log(mdContainer); // updatedHttpCall(returnVal)\n          // Promise.resolve(updatedHttpCall(returnVal)).then(()=>{\n          //     setTimeout(()=>renderMarkdownAndStyle(),1000);\n          // });\n        }).catch(renderError => console.error(renderError.message)).finally(() => {\n          const funcPartial = markdownFile.replace(/-/g, '');\n          console.log(funcPartial); // [`renderMarkdownAndStyle_${}`]()\n        });\n      });\n    }\n  });\n\n  function renderMarkdownAndStyle_termsofuse() {\n    render( /*#__PURE__*/React.createElement(IonItem, {\n      style: {\n        fontSize: '1.5em'\n      },\n      className: \"ion-margin-vertical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IonIcon, {\n      slot: \"start\",\n      size: \"large\",\n      icon: lockClosedOutline,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(IonText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, headingEl.innerText)), headingEl);\n    headingSec.forEach(el => {\n      console.log(el);\n      render( /*#__PURE__*/React.createElement(IonItem, {\n        style: {\n          fontSize: '1.2em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 20\n        }\n      }, el.innerText), el);\n    }); // headingThird.forEach((el: HTMLHeadingElement)=>{\n\n    render( /*#__PURE__*/React.createElement(IonItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IonTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, headingThird[0].innerText), headingFourth[0].innerText), headingThird[0]);\n    render( /*#__PURE__*/React.createElement(IonItemDivider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }), headingFourth[0]); // })\n    // const mdHtml = markItDown.render(markdownString);\n    // console.log(mdHtml);\n    // updatedHttpCall()\n    // console.log(mdContainer);\n    // mdContainer.innerHtml = mdHtml;\n  }\n\n  function ionItemHeading() {// console.log(el);\n    // const text = el.innerText;\n    // React.createElement()\n    // console.log(text);\n    // render(<div/>, document.getElementById('heading'));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"md-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  });\n}","map":{"version":3,"sources":["/Users/cliff/GIT/privacy-and-terms.cliff-crerar.tech/src/components/Render-Markdown/Render-Markdown.tsx"],"names":["React","useEffect","render","IonIcon","IonItem","IonItemDivider","IonText","IonTitle","lockClosedOutline","MarkdownIt","markItDown","fetched","console","log","RenderMarkdown","markdownFile","mdContainer","headingEl","headingSec","headingThird","headingFourth","responseBody","document","getElementById","fetch","then","response","text","body","catch","httpError","error","message","finally","Promise","resolve","returnVal","innerHTML","querySelector","querySelectorAll","id","renderError","funcPartial","replace","renderMarkdownAndStyle_termsofuse","fontSize","innerText","forEach","el","ionItemHeading"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,SAAQC,MAAR,QAAqB,WAArB;AACA,SAAQC,OAAR,EAAiBC,OAAjB,EAA0BC,cAA1B,EAA0CC,OAA1C,EAAmDC,QAAnD,QAAkE,cAAlE;AACA,SAAQC,iBAAR,QAAgC,gBAAhC;AACA,OAAOC,UAAP,MAAuB,aAAvB,C,CACA;;AAEA,MAAMC,UAAsB,GAAG,IAAID,UAAJ,EAA/B;AAIA,IAAIE,OAAO,GAAG,KAAd;AACAC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,OAApB;AAEA,eAAe,SAASG,cAAT,CAAwB;AAACC,EAAAA;AAAD,CAAxB,EAA+C;AAC1D,MAAIC,WAAJ;AACA,MAAIC,SAAJ;AACA,MAAIC,UAAJ;AACA,MAAIC,YAAJ;AACA,MAAIC,aAAJ,CAL0D,CAM1D;;AACAnB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACU,OAAL,EAAc;AACV,UAAIU,YAAY,GAAG,EAAnB;AACAV,MAAAA,OAAO,GAAG,IAAV;AACAK,MAAAA,WAAW,GAAGM,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAd;AACAC,MAAAA,KAAK,CAAE,IAAGT,YAAa,KAAlB,CAAL,CAA6BU,IAA7B,CAAkCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBG,IAAI,IAAI;AACvEP,QAAAA,YAAY,GAAGO,IAAf;AACH,OAF6C,CAA9C,EAEIC,KAFJ,CAEUC,SAAS,IAAIlB,OAAO,CAACmB,KAAR,CAAcD,SAAS,CAACE,OAAxB,CAFvB,EAGKC,OAHL,CAGa,MAAM;AACXC,QAAAA,OAAO,CAACC,OAAR,CAAgBzB,UAAU,CAACR,MAAX,CAAkBmB,YAAlB,CAAhB,EAAiDI,IAAjD,CAAsDW,SAAS,IAAI;AAC/DpB,UAAAA,WAAW,CAACqB,SAAZ,GAAwBD,SAAxB;AAEAnB,UAAAA,SAAS,GAAGD,WAAW,CAACsB,aAAZ,CAA0B,IAA1B,CAAZ;AACApB,UAAAA,UAAU,GAAGF,WAAW,CAACuB,gBAAZ,CAA6B,IAA7B,CAAb;AACApB,UAAAA,YAAY,GAAGH,WAAW,CAACuB,gBAAZ,CAA6B,IAA7B,CAAf;AACAnB,UAAAA,aAAa,GAAGJ,WAAW,CAACuB,gBAAZ,CAA6B,IAA7B,CAAhB;AACA3B,UAAAA,OAAO,CAACC,GAAR,CAAYG,WAAZ;AACAJ,UAAAA,OAAO,CAACC,GAAR,CAAYuB,SAAZ;AACAnB,UAAAA,SAAS,CAACuB,EAAV,GAAe,SAAf,CAT+D,CAU/D;;AACA5B,UAAAA,OAAO,CAACC,GAAR,CAAYG,WAAZ,EAX+D,CAY/D;AAEA;AACA;AACA;AACH,SAjBD,EAkBKa,KAlBL,CAkBWY,WAAW,IAAI7B,OAAO,CAACmB,KAAR,CAAcU,WAAW,CAACT,OAA1B,CAlB1B,EAmBKC,OAnBL,CAmBa,MAAM;AACX,gBAAMS,WAAW,GAAG3B,YAAY,CAAC4B,OAAb,CAAqB,IAArB,EAA2B,EAA3B,CAApB;AACA/B,UAAAA,OAAO,CAACC,GAAR,CAAY6B,WAAZ,EAFW,CAGX;AACH,SAvBL;AAwBH,OA5BL;AA6BH;AACJ,GAnCQ,CAAT;;AAqCA,WAASE,iCAAT,GAA6C;AACzC1C,IAAAA,MAAM,eACF,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAC2C,QAAAA,QAAQ,EAAE;AAAX,OAAhB;AAAqC,MAAA,SAAS,EAAC,qBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,OAAd;AAAsB,MAAA,IAAI,EAAC,OAA3B;AAAmC,MAAA,IAAI,EAAErC,iBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAUS,SAAS,CAAC6B,SAApB,CAFJ,CADE,EAIU7B,SAJV,CAAN;AAMAC,IAAAA,UAAU,CAAC6B,OAAX,CAAoBC,EAAD,IAAa;AAC5BpC,MAAAA,OAAO,CAACC,GAAR,CAAYmC,EAAZ;AACA9C,MAAAA,MAAM,eAAC,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE;AAAC2C,UAAAA,QAAQ,EAAE;AAAX,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsCG,EAAE,CAACF,SAAzC,CAAD,EAAgEE,EAAhE,CAAN;AACH,KAHD,EAPyC,CAWzC;;AACA9C,IAAAA,MAAM,eACF,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKiB,YAAY,CAAC,CAAD,CAAZ,CAAgB2B,SADrB,CADJ,EAKK1B,aAAa,CAAC,CAAD,CAAb,CAAiB0B,SALtB,CADE,EAQU3B,YAAY,CAAC,CAAD,CARtB,CAAN;AASAjB,IAAAA,MAAM,eACF,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADE,EAGiBkB,aAAa,CAAC,CAAD,CAH9B,CAAN,CArByC,CA0BzC;AACA;AACA;AACA;AACA;AACA;AAEH;;AAED,WAAS6B,cAAT,GAA0B,CACtB;AACA;AAEA;AACA;AAEA;AAEH;;AAED,sBAAQ;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR;AAGH","sourcesContent":["import React, {useEffect} from 'react';\n// import {MarkItDown} from '../mark-it-down'\nimport {render} from \"react-dom\";\nimport {IonIcon, IonItem, IonItemDivider, IonText, IonTitle} from '@ionic/react';\nimport {lockClosedOutline} from 'ionicons/icons'\nimport MarkdownIt from 'markdown-it';\n// import error = Simulate.error;\n\nconst markItDown: MarkdownIt = new MarkdownIt();\n\ntype Props = { markdownFile: string };\n\nlet fetched = false;\nconsole.log('init', fetched)\n\nexport default function RenderMarkdown({markdownFile}: Props) {\n    let mdContainer: HTMLDivElement;\n    let headingEl: HTMLHeadingElement;\n    let headingSec: NodeListOf<HTMLHeadingElement>;\n    let headingThird: NodeListOf<HTMLHeadingElement>;\n    let headingFourth: NodeListOf<HTMLHeadingElement>\n    // const [renderedMd, updatedHttpCall] = useState('');\n    useEffect(() => {\n        if (!fetched) {\n            let responseBody = '';\n            fetched = true;\n            mdContainer = document.getElementById('md-container') as HTMLDivElement;\n            fetch(`/${markdownFile}.md`).then(response => response.text().then(body => {\n                responseBody = body;\n            })).catch(httpError => console.error(httpError.message))\n                .finally(() => {\n                    Promise.resolve(markItDown.render(responseBody)).then(returnVal => {\n                        mdContainer.innerHTML = returnVal;\n\n                        headingEl = mdContainer.querySelector('h1') as HTMLHeadingElement;\n                        headingSec = mdContainer.querySelectorAll('h2') as NodeListOf<HTMLHeadingElement>;\n                        headingThird = mdContainer.querySelectorAll('h3') as NodeListOf<HTMLHeadingElement>;\n                        headingFourth = mdContainer.querySelectorAll('h4') as NodeListOf<HTMLHeadingElement>;\n                        console.log(mdContainer);\n                        console.log(returnVal);\n                        headingEl.id = 'heading';\n                        // = returnVal;\n                        console.log(mdContainer);\n                        // updatedHttpCall(returnVal)\n\n                        // Promise.resolve(updatedHttpCall(returnVal)).then(()=>{\n                        //     setTimeout(()=>renderMarkdownAndStyle(),1000);\n                        // });\n                    })\n                        .catch(renderError => console.error(renderError.message))\n                        .finally(() => {\n                            const funcPartial = markdownFile.replace(/-/g, '');\n                            console.log(funcPartial);\n                            // [`renderMarkdownAndStyle_${}`]()\n                        });\n                })\n        }\n    })\n\n    function renderMarkdownAndStyle_termsofuse() {\n        render(\n            <IonItem style={{fontSize: '1.5em'}} className=\"ion-margin-vertical\">\n                <IonIcon slot=\"start\" size=\"large\" icon={lockClosedOutline}></IonIcon>\n                <IonText>{headingEl.innerText}</IonText>\n            </IonItem>, headingEl\n        )\n        headingSec.forEach((el: any) => {\n            console.log(el);\n            render(<IonItem style={{fontSize: '1.2em'}}>{el.innerText}</IonItem>, el);\n        })\n        // headingThird.forEach((el: HTMLHeadingElement)=>{\n        render(\n            <IonItem>\n                <IonTitle>\n                    {headingThird[0].innerText}\n                </IonTitle>\n                {/*<IonNote>*/}\n                {headingFourth[0].innerText}\n                {/*</IonNote>*/}\n            </IonItem>, headingThird[0])\n        render(\n            <IonItemDivider>\n                {/*{headingFourth[0].innerText}*/}\n            </IonItemDivider>, headingFourth[0]\n        )\n        // })\n        // const mdHtml = markItDown.render(markdownString);\n        // console.log(mdHtml);\n        // updatedHttpCall()\n        // console.log(mdContainer);\n        // mdContainer.innerHtml = mdHtml;\n\n    }\n\n    function ionItemHeading() {\n        // console.log(el);\n        // const text = el.innerText;\n\n        // React.createElement()\n        // console.log(text);\n\n        // render(<div/>, document.getElementById('heading'));\n\n    }\n\n    return (<div id=\"md-container\">\n        {/*{renderedMd}*/}\n    </div>);\n}\n"]},"metadata":{},"sourceType":"module"}